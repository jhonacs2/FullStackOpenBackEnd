{"version":3,"sources":["components/Filter.js","components/Notification.js","services/contacts.js","components/PersonForm.js","components/Numbers.js","components/Persons.js","App.js","index.js"],"names":["Filter","filterName","setFilterName","value","onChange","e","target","Notification","notification","alertStyle","backgroundColor","padding","fontSize","border","includes","style","baseUrl","newContact","axios","post","then","response","data","get","id","delete","put","PersonForm","setnewName","newName","number","setNumber","setPersons","persons","setNotification","onSubmit","preventDefault","name","conditionalName","map","person","filter","contact","window","confirm","changueContact","parseInt","contactService","returnContact","concat","setTimeout","type","Numbers","deletePerson","onClick","Person","index","find","n","r","catch","error","App","useState","useEffect","allContacts","filterToShow","toLowerCase","Persons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e85ffb2f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ filterName, setFilterName }) => {\n  const filterInput = (e) => {\n    setFilterName(e.target.value);\n  };\n  return (\n    <>\n      Filter Shown with: <input value={filterName} onChange={filterInput} />\n    </>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nexport default function Notification({ notification }) {\n  const alertStyle = {\n    backgroundColor: \"green\",\n    padding: \"1rem\",\n    fontSize: \"16px\",\n    border: \"greenyellow\",\n  };\n  if (notification === null) {\n    return null;\n  }\n  const alert = notification.includes('delete')\n  if(alert){\n    alertStyle.backgroundColor = \"red\"\n  }\n\n  return (\n    <div style={alertStyle}>\n      <p>{notification} was added to phonebook</p>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAllContacts = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newContact) => {\n  const request = axios.post(baseUrl, newContact);\n  return request.then((response) => response.data);\n};\n\nconst updateContact = (id, newContact) => {\n  const request = axios.put(`${baseUrl}/${id}`, newContact);\n  return request.then((response) => response.data);\n};\n\nconst deleteContact = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response);\n};\n\nexport default {\n  create,\n  getAllContacts,\n  deleteContact,\n  updateContact\n};\n","import React from \"react\";\nimport contactService from \"../services/contacts\";\n\nconst PersonForm = ({\n  setnewName,\n  newName,\n  number,\n  setNumber,\n  setPersons,\n  persons,\n  setNotification,\n}) => {\n  const handleNameChange = (e) => {\n    setnewName(e.target.value);\n  };\n  const handleNumberChange = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const addNumber = (e) => {\n    e.preventDefault();\n    const newContact = {\n      name: newName,\n      number: number,\n    };\n    const sameName = persons.map((person) => person.name);\n    const conditionalName = sameName.includes(newName);\n    const [contact] = persons.filter((person) => person.name === newName);\n    if (conditionalName) {\n      const changueTF = window.confirm(\n        `User is already added to phonebook, do you want replace it`\n      );\n      if (changueTF) {\n        const changueContact = { ...contact, number: parseInt(number) };\n        contactService\n          .updateContact(contact.id, changueContact)\n          .then((returnContact) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === contact.id ? returnContact : person\n              )\n            );\n          });\n      }\n    } else {\n      contactService.create(newContact).then((contact) => {\n        setPersons(persons.concat(contact));\n        setnewName(\"\");\n        setNumber(0);\n      });\n      setNotification(newContact.name);\n\n      setTimeout(() => {\n        setNotification(null);\n      }, 4000);\n    }\n  };\n  return (\n    <form onSubmit={addNumber}>\n      <div>\n        Name: <input value={newName} onChange={handleNameChange} />\n        <br />\n        Number:{\" \"}\n        <input value={number} onChange={handleNumberChange} type=\"number\" />\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react'\n\nconst Numbers = ({ person, deletePerson }) => {\n    \n    return(\n        <>\n        <p>{person.name} {person.number} <button onClick={deletePerson}>Delete</button></p>\n        \n        </>\n        \n    )\n}\n\nexport default Numbers","import React from \"react\";\nimport Numbers from \"./Numbers\";\nimport contactService from \"../services/contacts\";\nconst Person = ({ persons, setPersons, setNotification }) => {\n  const deletePerson = (id) => {\n    const { name } = persons.find((n) => n.id === id);\n    const result = window.confirm(`delete ${name}`);\n    if (result) {\n      contactService\n        .deleteContact(id)\n        .then((r) =>\n          setPersons(persons.filter((person) => person.id !== id && person))\n        )\n        .catch((error) => {\n          setNotification(`${name} was already delete from server`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 4000)\n          setPersons(persons.filter(person => person.id !== id)  )\n        });\n      // setPersons(persons.filter((person) => person.id !== id && person ));\n    }\n  };\n\n  return (\n    <>\n      {persons.map((person, index) => {\n        return (\n          <Numbers\n            key={index}\n            person={person}\n            deletePerson={() => deletePerson(person.id)}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default Person;\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport contactService from \"./services/contacts\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setnewName] = useState(\"\");\n  const [number, setNumber] = useState(0);\n  const [filterName, setFilterName] = useState(\"\");\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    contactService\n      .getAllContacts()\n      .then((allContacts) => setPersons(allContacts));\n  }, []);\n\n \n  const filterToShow =\n    filterName === \"\"\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(filterName.toLowerCase())\n        );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <br />\n      <Filter filterName={filterName} setFilterName={setFilterName} />\n      {/* Filter Shown with: <input value={filterName}  onChange = {filterInput} /> */}\n      <Notification notification = {notification} />\n      <h3>Add a new</h3>\n      <PersonForm\n        setnewName={setnewName}\n        newName={newName}\n        number={number}\n        setNumber={setNumber}\n        setPersons={setPersons}\n        persons={persons}\n        setNotification={setNotification}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={filterToShow} setPersons={setPersons} setNotification={setNotification}/>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}